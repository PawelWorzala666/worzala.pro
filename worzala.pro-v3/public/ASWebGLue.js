export function print(e){console.log(e)}export function ASWebGLReady(e,r){console.log("ASWebGLReady"),null!=e?null!=e?(r.WebGL.WEBGL_READY=!0,console.log("========================="),console.log(e.instance.exports),console.log(e.instance.exports.__rtti_base),r.WebGL.RTTI_BASE=e.instance.exports.__rtti_base):console.error("ASWebGLReady requires import object as 2nd parameter"):console.error("ASWebGLReady requires the WebAssembly Instance as 1st parameter")}export function initASWebGLue(e){if(!e?.env?.memory)throw new Error("You need to pass an importObject with .env.memory in it.");null==e.WebGL&&(e.WebGL={});const r=e.WebGL;e.env.abort=(...e)=>{console.log("abort"),console.log(r.getString(e[0]))},e.WebGL.WEBGL_READY=!1,e.WebGL.memory=e.env.memory,e.WebGL.contextArray=[],e.WebGL.textureArray=[],e.WebGL.imageArray=[],e.WebGL.programArray=[],e.WebGL.shaderArray=[],e.WebGL.bufferArray=[],e.WebGL.frameBufferArray=[],e.WebGL.renderBufferArray=[],e.WebGL.uniformLocationArray=[],e.WebGL.vaoArray=[],e.WebGL.SIZE_OFFSET=-4,e.WebGL.ID_OFFSET=-8,e.WebGL.CHUNKSIZE=1024,e.WebGL.STRING_ID=1,e.WebGL.RTTI_BASE=0,e.WebGL.VAL_ALIGN_OFFSET=6,e.ARRAYBUFFERVIEW_DATASTART_OFFSET=4,e.ARRAY_LENGTH_OFFSET=12,e.WebGL.NONE=0,e.WebGL.ARRAYBUFFERVIEW=1,e.WebGL.ARRAY=2,e.WebGL.STATICARRAY=4,e.WebGL.SET=8,e.WebGL.MAP=16,e.WebGL.ACYCLIC=32,e.WebGL.VALUE_ALIGN_0=64,e.WebGL.VALUE_ALIGN_1=128,e.WebGL.VALUE_ALIGN_2=256,e.WebGL.VALUE_ALIGN_3=512,e.WebGL.VALUE_ALIGN_4=1024,e.WebGL.VALUE_SIGNED=2048,e.WebGL.VALUE_FLOAT=4096,e.WebGL.VALUE_NULLABLE=8192,e.WebGL.VALUE_MANAGED=16384,e.WebGL.KEY_ALIGN_0=32768,e.WebGL.KEY_ALIGN_1=65536,e.WebGL.KEY_ALIGN_2=131072,e.WebGL.KEY_ALIGN_3=262144,e.WebGL.KEY_ALIGN_4=524288,e.WebGL.KEY_SIGNED=1048576,e.WebGL.KEY_FLOAT=2097152,e.WebGL.KEY_NULLABLE=4194304,e.WebGL.KEY_MANAGED=8388608,e.WebGL.createImage=e=>{console.log(`createImage(${e})`);let t=new Image;t.ready=!1,t.onload=function(){t.ready=!0},t.src=r.getString(e),console.log(`image.src=${t.src}`);let o=r.imageArray.length;return r.imageArray.push(t),o},e.WebGL.logi32=e=>{console.log(`logi32=${e}`)},e.WebGL.logf32=e=>{console.log(`logf32=${e}`)},e.WebGL.imageReady=e=>(console.log("image ready check! image_id="+e),!(r.imageArray.length<=e)&&r.imageArray[e].ready),e.WebGL.getView=(e,t,o)=>{const a=r.memory.buffer;if(o)switch(e){case 2:return new Float32Array(a);case 3:return new Float64Array(a)}else switch(e){case 0:return new(t?Int8Array:Uint8Array)(a);case 1:return new(t?Int16Array:Uint16Array)(a);case 2:return new(t?Int32Array:Uint32Array)(a);case 3:return new(t?BigInt64Array:BigUint64Array)(a)}throw Error("unsupported align: "+e)},e.WebGL.getArrayInfo=e=>{const t=r.getInfo(e);if(!(t&(ARRAYBUFFERVIEW|ARRAY|STATICARRAY)))throw Error(`not an array: ${e}, flags=${t}`);return t},e.WebGL.getValueAlign=e=>31-Math.clz32(e>>>VAL_ALIGN_OFFSET&31),e.WebGL.getArrayView=e=>{const t=new Uint32Array(r.memory.buffer),o=t[e+r.ID_OFFSET>>>2];if(o>=t[r.RTTI_BASE>>>2])throw Error(`invalid id: ${o}`);const a=t[(r.RTTI_BASE+4>>>2)+2*o];if(!(a&(r.ARRAYBUFFERVIEW|r.ARRAY|r.STATICARRAY)))throw Error(`not an array: ${o}, flags=${a}`);const n=31-Math.clz32(a>>>r.VAL_ALIGN_OFFSET&31);let l=a&r.STATICARRAY?e:t[e+r.ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];const c=a&r.ARRAY?t[e+r.ARRAY_LENGTH_OFFSET>>>2]:t[l+r.SIZE_OFFSET>>>2]>>>n;return r.getView(n,a&r.VAL_SIGNED,a&r.VAL_FLOAT).subarray(l>>>=n,l+c)},e.WebGL.getString=e=>{const t=r.memory.buffer,o=new Uint32Array(t),a=e/4-2,n=o[a];if(1!==n)throw Error(`not a string index=${e} id=${n}`);const l=o[a+1];return new TextDecoder("utf-16").decode(t.slice(e,e+l))},e.WebGL.createContextFromCanvas=(e,t)=>{try{const o=document.getElementById(r.getString(e)).getContext(r.getString(t));let a=r.contextArray.findIndex((e=>null==e));return-1==a?(a=r.contextArray.length,r.contextArray.push(o)):r.contextArray[a]=o,a}catch(e){console.log("createContextFromCanvas error"),console.error(e)}},e.WebGL.getSupportedExtensions=e=>{alert("getSupportedExtensions is not currently supported")},e.WebGL.getExtension=(e,t)=>{try{r.contextArray[e].getExtension(r.getString(name))}catch(e){console.log("getExtension error"),console.error(e)}},e.WebGL.activeTexture=(e,t)=>{try{r.contextArray[e].activeTexture(t)}catch(e){console.log("activeTexture error"),console.error(e)}},e.WebGL.attachShader=(e,t,o)=>{try{r.contextArray[e].attachShader(r.programArray[t],r.shaderArray[o])}catch(e){console.log("attachShader error"),console.error(e)}},e.WebGL.bindAttribLocation=(e,t,o,a)=>{try{r.contextArray[e].bindAttribLocation(r.programArray[t],o,r.getString(a))}catch(e){console.log("bindAttribLocation error"),console.error(e)}},e.WebGL.bindBuffer=(e,t,o)=>{try{r.contextArray[e].bindBuffer(t,r.bufferArray[o])}catch(e){console.log("bindBuffer error"),console.error(e)}},e.WebGL.bindFramebuffer=(e,t,o)=>{try{r.contextArray[e].bindFramebuffer(t,r.framebufferArray[o])}catch(e){console.log("bindFramebuffer error"),console.error(e)}},e.WebGL.bindRenderbuffer=(e,t,o)=>{try{r.contextArray[e].bindRenderbuffer(t,r.renderbufferArray[o])}catch(e){console.log("renderbufferArray error"),console.error(e)}},e.WebGL.bindTexture=(e,t,o)=>{try{r.contextArray[e].bindTexture(t,r.textureArray[o])}catch(e){console.log("bindTexture error"),console.error(e)}},e.WebGL.blendColor=(e,t,o,a,n)=>{try{r.contextArray[e].blendColor(t,o,a,n)}catch(e){console.log("blendColor error"),console.error(e)}},e.WebGL.blendEquation=(e,t)=>{try{r.contextArray[e].blendEquation(t)}catch(e){console.log("blendEquation error"),console.error(e)}},e.WebGL.blendEquationSeparate=(e,t,o)=>{try{r.contextArray[e].blendEquationSeparate(t,o)}catch(e){console.log("blendEquationSeparate error"),console.error(e)}},e.WebGL.blendFunc=(e,t,o)=>{try{r.contextArray[e].blendFunc(t,o)}catch(e){console.log("blendFunc error"),console.error(e)}},e.WebGL.blendFuncSeparate=(e,t,o,a,n)=>{try{r.contextArray[e].blendFuncSeparate(t,o,a,n)}catch(e){console.log("blendFuncSeparate error"),console.error(e)}};const t=(e,t,o,a)=>{try{r.contextArray[e].bufferData(t,r.getArrayView(o),a)}catch(e){console.log("bufferData error"),console.log(r.getArrayView(o)),console.error(e)}};e.WebGL["bufferData<f32>"]=t,e.WebGL["bufferData<f64>"]=t,e.WebGL["bufferData<i32>"]=t,e.WebGL.bufferSubData=(e,t,o,a,n)=>{try{r.contextArray[ctx].bufferSubData(e,t,r.getArrayView(o),a,n)}catch(e){console.log("bufferSubData error"),console.error(e)}},e.WebGL.checkFramebufferStatus=(e,t)=>{try{return r.contextArray[e].checkFramebufferStatus(t)}catch(e){console.log("checkFramebufferStatus error"),console.error(e)}},e.WebGL.clear=(e,t)=>{try{r.contextArray[e].clear(t)}catch(e){console.log("clear error"),console.error(e)}},e.WebGL.clearColor=(e,t,o,a,n)=>{try{r.contextArray[e].clearColor(t,o,a,n)}catch(e){console.log("clearColor error"),console.error(e)}},e.WebGL.clearDepth=(e,t)=>{try{r.contextArray[e].clearDepth(t)}catch(e){console.log("clearDepth error"),console.error(e)}},e.WebGL.clearStencil=(e,t)=>{try{r.contextArray[e].clearStencil(t)}catch(e){console.log("clearStencil error"),console.error(e)}},e.WebGL.colorMask=(e,t,o,a,n)=>{try{r.contextArray[e].colorMask(t,o,a,n)}catch(e){console.log("colorMask error"),console.error(e)}},e.WebGL.compileShader=(e,t)=>{try{r.contextArray[e].compileShader(r.shaderArray[t]);var o=r.contextArray[e].getShaderInfoLog(r.shaderArray[t]);console.log(o)}catch(e){console.log("compileShader error"),console.error(e)}},e.WebGL.compressedTexImage2D=(e,t,o,a,n,l,c,i)=>{try{r.contextArray[e].compileShader(t,o,a,n,l,c,r.getArrayView(i))}catch(e){console.log("compressedTexImage2D error"),console.error(e)}},e.WebGL.compressedTexSubImage2D=(e,t,o,a,n,l,c,i,m)=>{try{r.contextArray[e].compressedTexSubImage2D(t,a,n,l,c,i,r.getArrayView(m))}catch(e){console.log("compressedTexSubImage2D error"),console.error(e)}},e.WebGL.copyTexImage2D=(e,t,o,a,n,l,c,i,m)=>{try{r.contextArray[e].copyTexImage2D(t,o,a,n,l,c,i,m)}catch(e){console.log("copyTexImage2D error"),console.error(e)}},e.WebGL.copyTexSubImage2D=(e,t,o,a,n,l,c,i,m)=>{try{r.contextArray[e].copyTexSubImage2D(t,o,a,n,l,c,i,m)}catch(e){console.log("copyTexSubImage2D error"),console.error(e)}},e.WebGL.createBuffer=e=>{try{let t=r.bufferArray.findIndex((e=>null==e)),o=r.contextArray[e].createBuffer();return-1==t?(t=r.bufferArray.length,r.bufferArray.push(o)):r.bufferArray[t]=o,t}catch(e){console.log("createBuffer error"),console.error(e)}},e.WebGL.createFramebuffer=e=>{alert(arguments.callee.toString())},e.WebGL.createProgram=e=>{try{let t=r.programArray.findIndex((e=>null==e)),o=r.contextArray[e].createProgram();return-1==t?(t=r.programArray.length,r.programArray.push(o)):r.programArray[t]=o,t}catch(e){console.log("createProgram error"),console.error(e)}},e.WebGL.createRenderbuffer=e=>{try{let t=r.renderBufferArray.findIndex((e=>null==e)),o=r.contextArray[e].createRenderbuffer();return-1==t?(t=r.renderBufferArray.length,r.renderBufferArray.push(o)):r.renderBufferArray[t]=o,t}catch(e){console.log("renderBufferArray error"),console.error(e)}},e.WebGL.createShader=(e,t)=>{try{let o=r.shaderArray.findIndex((e=>null==e)),a=r.contextArray[e].createShader(t);return-1==o?(o=r.shaderArray.length,r.shaderArray.push(a)):r.shaderArray[o]=a,o}catch(e){console.log("createShader error"),console.error(e)}},e.WebGL.createTexture=e=>{try{let t=r.textureArray.findIndex((e=>null==e)),o=r.contextArray[e].createTexture();return-1==t?(t=r.textureArray.length,r.textureArray.push(o)):r.textureArray[t]=o,console.log("createTexture id="+t),t}catch(e){console.log("createTexture error"),console.error(e)}},e.WebGL.cullFace=(e,t)=>{try{r.contextArray[e].cullFace(target,t)}catch(e){console.log("cullFace error"),console.error(e)}},e.WebGL.deleteBuffer=(e,t)=>{try{r.contextArray[e].deleteBuffer(this.bufferArray[t]),this.bufferArray[t]=null}catch(e){console.log("deleteBuffer error"),console.error(e)}},e.WebGL.deleteFramebuffer=(e,t)=>{try{r.contextArray[e].deleteFramebuffer(this.framebufferArray[t]),this.framebufferArray[t]=null}catch(e){console.log("deleteFramebuffer error"),console.error(e)}},e.WebGL.deleteRenderbuffer=(e,t)=>{try{r.contextArray[e].deleteRenderbuffer(this.renderBufferArray[t]),this.renderBufferArray[t]=null}catch(e){console.log("deleteRenderbuffer error"),console.error(e)}},e.WebGL.deleteProgram=(e,t)=>{try{r.contextArray[e].deleteProgram(this.programArray[t]),this.program[t]=null}catch(e){console.log("deleteProgram error"),console.error(e)}},e.WebGL.deleteShader=(e,t)=>{try{r.contextArray[e].deleteShader(this.shaderArray[t]),this.shaderArray[t]=null}catch(e){console.log("deleteShader error"),console.error(e)}},e.WebGL.deleteTexture=(e,t)=>{try{r.contextArray[e].deleteShader(this.textureArray[t]),this.textureArray[t]=null}catch(e){console.log("deleteTexture error"),console.error(e)}},e.WebGL.depthFunc=(e,t)=>{try{r.contextArray[e].depthFunc(t)}catch(e){console.log("depthFunc error"),console.error(e)}},e.WebGL.depthMask=(e,t)=>{try{r.contextArray[e].depthMask(t)}catch(e){console.log("depthMask error"),console.error(e)}},e.WebGL.depthRange=(e,t,o)=>{try{r.contextArray[e].depthRange(t,o)}catch(e){console.log("depthRange error"),console.error(e)}},e.WebGL.detachShader=(e,t,o)=>{try{r.contextArray[e].detachShader(t,o)}catch(e){console.log("detachShader error"),console.error(e)}},e.WebGL.disable=(e,t)=>{try{r.contextArray[e].disable(t)}catch(e){console.log("disable error"),console.error(e)}},e.WebGL.disableVertexAttribArray=(e,t)=>{try{r.contextArray[e].disableVertexAttribArray(t)}catch(e){console.log("disableVertexAttribArray error"),console.error(e)}},e.WebGL.drawArrays=(e,t,o,a)=>{try{r.contextArray[e].drawArrays(t,o,a)}catch(e){console.log("drawArrays error"),console.error(e)}},e.WebGL.drawElements=(e,t,o,a,n)=>{try{r.contextArray[e].drawElements(t,o,a,n)}catch(e){console.log("drawElements error"),console.error(e)}},e.WebGL.enable=(e,t)=>{try{r.contextArray[e].enable(t)}catch(e){console.log("enable error"),console.error(e)}},e.WebGL.enableVertexAttribArray=(e,t)=>{try{r.contextArray[e].enableVertexAttribArray(t)}catch(e){console.log("enableVertexAttribArray error"),console.error(e)}},e.WebGL.finish=e=>{try{r.contextArray[e].finish()}catch(e){console.log("finish error"),console.error(e)}},e.WebGL.flush=e=>{try{r.contextArray[e].flush()}catch(e){console.log("flush error"),console.error(e)}},e.WebGL.framebufferRenderbuffer=(e,t,o,a,n)=>{try{r.contextArray[e].framebufferRenderbuffer(t,o,a,n)}catch(e){console.log("framebufferRenderbuffer error"),console.error(e)}},e.WebGL.framebufferTexture2D=(e,t,o,a,n,l)=>{try{r.contextArray[e].framebufferTexture2D(t,o,a,n,l)}catch(e){console.log("framebufferTexture2D error"),console.error(e)}},e.WebGL.frontFace=(e,t)=>{try{r.contextArray[e].frontFace(t)}catch(e){console.log("frontFace error"),console.error(e)}},e.WebGL.generateMipmap=(e,t)=>{try{r.contextArray[e].generateMipmap(t)}catch(e){console.log("generateMipmap error"),console.error(e)}},e.WebGL.getActiveAttrib=(e,r,t)=>(alert("getActiveAttrib is not implemented"),0),e.WebGL.getActiveUniform=(e,r,t)=>(alert("getActiveUniform is not implemented"),0),e.WebGL.getAttachedShaders=(e,r)=>(alert("getAttachedShaders is not implemented"),0),e.WebGL.getAttribLocation=(e,t,o)=>{try{return r.contextArray[e].getAttribLocation(r.programArray[t],r.getString(o))}catch(e){console.log("getAttribLocation error"),console.error(e)}},e.WebGL.getBufferParameter=(e,t,o)=>{try{return r.contextArray[e].getBufferParameter(t,o)}catch(e){console.log("getBufferParameter error"),console.error(e)}},e.WebGL.getParameter=(e,t)=>{try{return r.contextArray[e].getParameter(t)}catch(e){console.log("getParameter error"),console.error(e)}},e.WebGL.getError=e=>{try{return r.contextArray[e].getError()}catch(e){console.log("getError error"),console.error(e)}},e.WebGL.getFramebufferAttachmentParameter=(e,t,o,a)=>{try{return r.contextArray[e].getParameter(t,o,a)}catch(e){console.log("getFramebufferAttachmentParameter error"),console.error(e)}},e.WebGL.getProgramInfoLog=(e,r)=>(alert("getProgramInfoLog not implemented"),0),e.WebGL.getRenderbufferParameter=(e,t,o)=>{try{return r.contextArray[e].getRenderbufferParameter(t,o)}catch(e){console.log("getRenderbufferParameter error"),console.error(e)}},e.WebGL.getShaderParameter=(e,r,t)=>(alert("getShaderParameter not implemented"),0),e.WebGL.getShaderPrecisionFormat=(e,r,t)=>(alert("getShaderPrecisionFormat not implemented"),0),e.WebGL.getShaderInfoLog=(e,r)=>(alert("getShaderInfoLog not implemented"),0),e.WebGL.getShaderSource=(e,r)=>(alert("getShaderInfoLog not implemented"),0),e.WebGL.getTexParameter=(e,r,t)=>(alert("getTexParameter not implemented"),0),e.WebGL.getUniform=(e,r,t)=>(alert("getUniform not implemented"),0),e.WebGL.getUniformLocation=(e,t,o)=>{try{let a=r.uniformLocationArray.findIndex((e=>null==e)),n=r.contextArray[e].getUniformLocation(r.programArray[t],r.getString(o));return-1==a?(a=r.uniformLocationArray.length,r.uniformLocationArray.push(n)):r.uniformLocationArray[a]=n,a}catch(e){console.log("getUniformLocation error"),console.error(e)}},e.WebGL.getVertexAttrib=(e,r,t)=>(alert("getVertexAttrib not implemented"),0),e.WebGL.getVertexAttribOffset=(e,t,o)=>{try{return r.contextArray[e].getVertexAttribOffset(t,o)}catch(e){console.log("getVertexAttribOffset error"),console.error(e)}},e.WebGL.hint=(e,t,o)=>{try{return r.contextArray[e].hint(t,o)}catch(e){console.log("hint error"),console.error(e)}},e.WebGL.isBuffer=(e,t)=>{try{return r.contextArray[e].isBuffer(r.bufferArray[t])}catch(e){console.log("isBuffer error"),console.error(e)}},e.WebGL.isEnabled=(e,t)=>{try{return r.contextArray[e].isEnabled(t)}catch(e){console.log("isEnabled error"),console.error(e)}},e.WebGL.isFramebuffer=(e,t)=>{try{return r.contextArray[e].isFramebuffer(r.frameBufferArray[t])}catch(e){console.log("isFramebuffer error"),console.error(e)}},e.WebGL.isProgram=(e,t)=>{try{return r.contextArray[e].isProgram(r.programArray[t])}catch(e){console.log("isProgram error"),console.error(e)}},e.WebGL.isRenderbuffer=(e,t)=>{try{return r.contextArray[e].isRenderbuffer(r.renderBufferArray[t])}catch(e){console.log("isRenderbuffer error"),console.error(e)}},e.WebGL.isShader=(e,t)=>{try{return r.contextArray[e].isShader(r.shaderArray[t])}catch(e){console.log("isShader error"),console.error(e)}},e.WebGL.isTexture=(e,t)=>{try{return r.contextArray[e].isTexture(r.textureArray[t])}catch(e){console.log("isTexture error"),console.error(e)}},e.WebGL.lineWidth=(e,t)=>{try{return r.contextArray[e].lineWidth(t)}catch(e){console.log("lineWidth error"),console.error(e)}},e.WebGL.linkProgram=(e,t)=>{try{r.contextArray[e].linkProgram(r.programArray[t]),r.contextArray[e].getProgramParameter(r.programArray[t],r.contextArray[e].LINK_STATUS)||console.log(r.contextArray[e].getProgramInfoLog(r.programArray[t]))}catch(e){console.log("linkProgram error"),console.error(e)}},e.WebGL.pixelStorei=(e,t,o)=>{try{r.contextArray[e].pixelStorei(t,o)}catch(e){console.log("pixelStorei error"),console.log(e)}},e.WebGL.polygonOffset=(e,t,o)=>{try{r.contextArray[e].polygonOffset(t,o)}catch(e){console.log("polygonOffset error"),console.error(e)}},e.WebGL.readPixels=(e,r,t,o,a,n,l,c)=>{alert("readPixels not implemented")},e.WebGL.renderbufferStorage=(e,t,o,a,n)=>{try{r.contextArray[e].renderbufferStorage(t,o,a,n)}catch(e){console.log("renderbufferStorage error"),console.error(e)}},e.WebGL.sampleCoverage=(e,t,o)=>{try{r.contextArray[e].sampleCoverage(t,o)}catch(e){console.log("sampleCoverage error"),console.error(e)}},e.WebGL.scissor=(e,t,o,a,n)=>{try{r.contextArray[e].scissor(t,o,a,n)}catch(e){console.log("scissor error"),console.error(e)}},e.WebGL.shaderSource=(e,t,o)=>{try{r.contextArray[e].shaderSource(r.shaderArray[t],r.getString(o))}catch(e){console.log("shaderSource error"),console.error(e)}},e.WebGL.stencilFunc=(e,t,o,a)=>{try{r.contextArray[e].stencilFunc(t,o,a)}catch(e){console.log("stencilFunc error"),console.error(e)}},e.WebGL.stencilFuncSeparate=(e,t,o,a,n)=>{try{r.contextArray[e].stencilFuncSeparate(t,o,a,n)}catch(e){console.log("stencilFuncSeparate error"),console.error(e)}},e.WebGL.stencilMask=(e,t)=>{try{r.contextArray[e].stencilMask(t)}catch(e){console.log("stencilMask error"),console.error(e)}},e.WebGL.stencilMaskSeparate=(e,t,o)=>{try{r.contextArray[e].stencilMaskSeparate(t,o)}catch(e){console.log("stencilMaskSeparate error"),console.error(e)}},e.WebGL.stencilOp=(e,r,t,o)=>{alert("stencilOp is not implemented")},e.WebGL.stencilOpSeparate=(e,r,t,o,a)=>{alert("stencilOpSeparate is not implemented")},e.WebGL.texImage2D=(e,t,o,a,n,l,c)=>{try{console.log(`\n      image_id=${c}\n      WebGL.imageArray.length=${r.imageArray.length}\n      `),r.contextArray[e].texImage2D(t,o,a,n,l,r.imageArray[c])}catch(e){console.log("texImage2D error"),console.error(e)}},e.WebGL.texParameterf=(e,t,o,a)=>{try{r.contextArray[e].texParameterf(t,o,a)}catch(e){console.log("texParameterf error"),console.error(e)}},e.WebGL.texParameteri=(e,t,o,a)=>{try{r.contextArray[e].texParameteri(t,o,a)}catch(e){console.log("texParameteri error"),console.error(e)}},e.WebGL.texSubImage2D=(e,t,o,a,n,l,c,i,m,s)=>{try{r.contextArray[e].texSubImage2D(t,o,a,n,l,c,i,m,r.getArrayView(s))}catch(e){console.log("texSubImage2D error"),console.error(e)}},e.WebGL.uniform1f=(e,t,o)=>{try{return r.contextArray[e].uniform1f(r.uniformLocationArray[t],o)}catch(e){console.log("uniform1f error"),console.error(e)}},e.WebGL.uniform1fv=(e,t,o)=>{try{return r.contextArray[e].uniform1fv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform1fv error"),console.error(e)}},e.WebGL.uniform1i=(e,t,o)=>{try{return r.contextArray[e].uniform1i(r.uniformLocationArray[t],o)}catch(e){console.log("uniform1i error"),console.error(e)}},e.WebGL.uniform1iv=(e,t,o)=>{try{return r.contextArray[e].uniform1iv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform1iv error"),console.error(e)}},e.WebGL.uniform2f=(e,t,o,a)=>{try{return r.contextArray[e].uniform2f(r.uniformLocationArray[t],o,a)}catch(e){console.log("uniform2f error"),console.error(e)}},e.WebGL.uniform2fv=(e,t,o)=>{try{return r.contextArray[e].uniform2fv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform2fv error"),console.error(e)}},e.WebGL.uniform2i=(e,t,o,a)=>{try{return r.contextArray[e].uniform2i(r.uniformLocationArray[t],o,a)}catch(e){console.log("uniform2i error"),console.error(e)}},e.WebGL.uniform2iv=(e,t,o)=>{try{return r.contextArray[e].uniform2iv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform2iv error"),console.error(e)}},e.WebGL.uniform3f=(e,t,o,a,n)=>{try{return r.contextArray[e].uniform3f(r.uniformLocationArray[t],o,a,n)}catch(e){console.log("uniform3f error"),console.error(e)}},e.WebGL.uniform3fv=(e,t,o)=>{try{return r.contextArray[e].uniform3fv(r.uniformLocationArray[t],new Float32Array(o))}catch(e){console.log("uniform3fv error"),console.error(e)}},e.WebGL.uniform3i=(e,t,o,a,n)=>{try{return r.contextArray[e].uniform3i(r.uniformLocationArray[t],o,a,n)}catch(e){console.log("uniform3i error"),console.error(e)}},e.WebGL.uniform3iv=(e,t,o)=>{try{return r.contextArray[e].uniform3iv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform3iv error"),console.error(e)}},e.WebGL.uniform4f=(e,t,o,a,n,l)=>{try{return r.contextArray[e].uniform4f(r.uniformLocationArray[t],o,a,n,l)}catch(e){console.log("uniform4f error"),console.error(e)}},e.WebGL.uniform4fv=(e,t,o)=>{try{return r.contextArray[e].uniform4fv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform4fv error"),console.error(e)}},e.WebGL.uniform4i=(e,t,o,a,n,l)=>{try{return r.contextArray[e].uniform4i(r.uniformLocationArray[t],o,a,n,l)}catch(e){console.log("uniform4i error"),console.error(e)}},e.WebGL.uniform4iv=(e,t,o)=>{try{return r.contextArray[e].uniform4iv(r.uniformLocationArray[t],r.getArrayView(o))}catch(e){console.log("uniform4iv error"),console.error(e)}},e.WebGL.uniformMatrix2fv=(e,t,o,a)=>{try{const n=r.memory.buffer;let l=a>>2;return r.contextArray[e].uniformMatrix3fv(r.uniformLocationArray[t],o,new Float32Array(n).subarray(l,l+4))}catch(e){console.log("uniformMatrix2fv error"),console.error(e)}},e.WebGL.uniformMatrix3fv=(e,t,o,a)=>{try{const n=r.memory.buffer;let l=a>>2;return r.contextArray[e].uniformMatrix3fv(r.uniformLocationArray[t],o,new Float32Array(n).subarray(l,l+9))}catch(e){console.log("uniformMatrix3fv error"),console.error(e)}},e.WebGL.uniformMatrix4fv=(e,t,o,a)=>{try{const n=r.memory.buffer;let l=a>>2;return r.contextArray[e].uniformMatrix3fv(r.uniformLocationArray[t],o,new Float32Array(n).subarray(l,l+16))}catch(e){console.log("uniformMatrix4fv error"),console.error(e)}},e.WebGL.useProgram=(e,t)=>{try{r.contextArray[e].useProgram(r.programArray[t])}catch(e){console.log("useProgram error"),console.error(e)}},e.WebGL.validateProgram=(e,t)=>{try{r.contextArray[e].validateProgram(r.programArray[t])}catch(e){console.log("validateProgram error"),console.error(e)}},e.WebGL.vertexAttrib1f=(e,t,o)=>{try{return r.contextArray[e].vertexAttrib1f(t,o)}catch(e){console.log("vertexAttrib1f error"),console.error(e)}},e.WebGL.vertexAttrib1fv=(e,t,o)=>{try{return r.contextArray[e].vertexAttrib1fv(t,r.getArrayView(o))}catch(e){console.log("vertexAttrib1fv error"),console.error(e)}},e.WebGL.vertexAttrib2f=(e,t,o,a)=>{try{return r.contextArray[e].vertexAttrib2f(t,o,a)}catch(e){console.log("vertexAttrib2f error"),console.error(e)}},e.WebGL.vertexAttrib2fv=(e,t,o)=>{try{return r.contextArray[e].vertexAttrib2fv(t,r.getArrayView(o))}catch(e){console.log("vertexAttrib2fv error"),console.error(e)}},e.WebGL.vertexAttrib3f=(e,t,o,a,n)=>{try{return r.contextArray[e].vertexAttrib3f(t,o,a,n)}catch(e){console.log("vertexAttrib3f error"),console.error(e)}},e.WebGL.vertexAttrib3fv=(e,t,o)=>{try{return r.contextArray[e].vertexAttrib3fv(t,r.getArrayView(o))}catch(e){console.log("vertexAttrib3fv error"),console.error(e)}},e.WebGL.vertexAttrib4f=(e,t,o,a,n,l)=>{try{return r.contextArray[e].vertexAttrib4f(t,o,a,n,l)}catch(e){console.log("vertexAttrib4f error"),console.error(e)}},e.WebGL.vertexAttrib4fv=(e,t,o)=>{try{return r.contextArray[e].vertexAttrib4fv(t,r.getArrayView(o))}catch(e){console.log("vertexAttrib4fv error"),console.error(e)}},e.WebGL.vertexAttribPointer=(e,t,o,a,n,l,c)=>{try{r.contextArray[e].vertexAttribPointer(t,o,a,n,l,c)}catch(e){console.log("vertexAttrib4fv error"),console.error(e)}},e.WebGL.viewport=(e,t,o,a,n,l)=>{try{r.contextArray[e].viewport(t,o,a,n,l)}catch(e){console.log("viewport error"),console.error(e)}},e.WebGL.copyBufferSubData=(e,r,t,o,a,n)=>{alert("copyBufferSubData not implemented (expiramental)")},e.WebGL.getBufferSubData=(e,r,t,o,a,n)=>{alert("getBufferSubData not implemented (expiramental)")},e.WebGL.blitFramebuffer=(e,r,t,o,a,n,l,c,i,m,s)=>{alert("blitFramebuffer not implemented (expiramental)")},e.WebGL.framebufferTextureLayer=(e,r,t,o,a,n)=>{alert("framebufferTextureLayer not implemented (expiramental)")},e.WebGL.invalidateFramebuffer=(e,r,t)=>{alert("invalidateFramebuffer not implemented (expiramental)")},e.WebGL.invalidateSubFramebuffer=(e,r,t,o,a,n,l)=>{alert("invalidateSubFramebuffer not implemented (expiramental)")},e.WebGL.readBuffer=(e,r)=>{alert("readBuffer not implemented (expiramental)")},e.WebGL.getInternalformatParameter=(e,r,t,o)=>{alert("getInternalformatParameter not implemented (expiramental)")},e.WebGL.renderbufferStorageMultisample=(e,r,t,o,a,n)=>{alert("renderbufferStorageMultisample not implemented (expiramental)")},e.WebGL.texStorage2D=(e,r,t,o,a,n)=>{alert("texStorage2D not implemented (expiramental)")},e.WebGL.texStorage3D=(e,r,t,o,a,n,l)=>{alert("texStorage3D not implemented (expiramental)")},e.WebGL.texSubImage3D=(e,r,t,o,a,n,l,c,i,m,s,f)=>{alert("texSubImage3D not implemented (expiramental)")},e.WebGL.copyTexSubImage3D=(e,r,t,o,a,n,l,c,i,m)=>{alert("copyTexSubImage3D not implemented (expiramental)")},e.WebGL.compressedTexImage3D=(e,r,t,o,a,n,l,c,i,m)=>{alert("compressedTexImage3D not implemented (expiramental)")},e.WebGL.compressedTexSubImage3D=(e,r,t,o,a,n,l,c,i,m,s,f)=>{alert("compressedTexSubImage3D not implemented (expiramental)")},e.WebGL.getFragDataLocation=(e,r,t)=>{alert("getFragDataLocation not implemented (expiramental)")},e.WebGL.uniform1ui=(e,r,t)=>{alert("uniform1ui not implemented (expiramental)")},e.WebGL.uniform2ui=(e,r,t,o)=>{alert("uniform2ui not implemented (expiramental)")},e.WebGL.uniform3ui=(e,r,t,o,a)=>{alert("uniform3ui not implemented (expiramental)")},e.WebGL.uniform4ui=(e,r,t,o,a,n)=>{alert("uniform4ui not implemented (expiramental)")},e.WebGL.uniform1uiv=(e,r,t,o,a)=>{alert("uniform1uiv not implemented (expiramental)")},e.WebGL.uniform2uiv=(e,r,t,o,a)=>{alert("uniform2uiv not implemented (expiramental)")},e.WebGL.uniform3uiv=(e,r,t,o,a)=>{alert("uniform3uiv not implemented (expiramental)")},e.WebGL.uniform4uiv=(e,r,t,o,a)=>{alert("uniform4uiv not implemented (expiramental)")},e.WebGL.uniformMatrix3x2fv=(e,r,t,o,a,n)=>{alert("uniformMatrix3x2fv not implemented (expiramental)")},e.WebGL.uniformMatrix4x2fv=(e,r,t,o,a,n)=>{alert("uniformMatrix4x2fv not implemented (expiramental)")},e.WebGL.uniformMatrix2x3fv=(e,r,t,o,a,n)=>{alert("uniformMatrix2x3fv not implemented (expiramental)")},e.WebGL.uniformMatrix4x3fv=(e,r,t,o,a,n)=>{alert("uniformMatrix4x3fv not implemented (expiramental)")},e.WebGL.uniformMatrix2x4fv=(e,r,t,o,a,n)=>{console.trace("uniformMatrix2x4fv"),alert("uniformMatrix2x4fv not implemented (expiramental)")},e.WebGL.uniformMatrix3x4fv=(e,r,t,o,a,n)=>{console.trace("uniformMatrix3x4fv"),alert("uniformMatrix3x4fv not implemented (expiramental)")},e.WebGL.vertexAttribI4i=(e,r,t,o,a,n)=>{console.trace("vertexAttribI4i"),alert("vertexAttribI4i not implemented (expiramental)")},e.WebGL.vertexAttribI4iv=(e,r,t)=>{console.trace("vertexAttribI4iv"),alert("vertexAttribI4iv not implemented (expiramental)")},e.WebGL.vertexAttribI4ui=(e,r,t,o,a,n)=>{console.trace("vertexAttribI4ui"),alert("vertexAttribI4ui not implemented (expiramental)")},e.WebGL.vertexAttribI4uiv=(e,r,t)=>{console.trace("vertexAttribI4uiv"),alert("vertexAttribI4uiv not implemented (expiramental)")},e.WebGL.vertexAttribIPointer=(e,r,t,o,a,n)=>{console.trace("vertexAttribIPointer"),alert("vertexAttribIPointer not implemented (expiramental)")},e.WebGL.vertexAttribDivisor=(e,t,o)=>{try{return r.contextArray[e].vertexAttribDivisor(t,o)}catch(e){console.trace("vertexAttribDivisor error"),console.error(e)}},e.WebGL.drawArraysInstanced=(e,t,o,a,n)=>{try{return r.contextArray[e].drawArraysInstanced(t,o,a,n)}catch(e){console.log("drawArraysInstanced error"),console.error(e)}},e.WebGL.drawElementsInstanced=(e,t,o,a,n,l)=>{try{return r.contextArray[e].drawArraysInstanced(t,o,a,n,l)}catch(e){console.log("drawElementsInstanced error"),console.error(e)}},e.WebGL.drawRangeElements=(e,r,t,o,a,n,l)=>{alert("drawRangeElements not implemented (expiramental)")},e.WebGL.drawBuffers=(e,r)=>{alert("drawBuffers not implemented (expiramental)")},e.WebGL.clearBufferfv=(e,r,t,o,a)=>{alert("clearBufferfv not implemented (expiramental)")},e.WebGL.clearBufferiv=(e,r,t,o,a)=>{alert("clearBufferiv not implemented (expiramental)")},e.WebGL.clearBufferuiv=(e,r,t,o,a)=>{alert("clearBufferuiv not implemented (expiramental)")},e.WebGL.clearBufferfi=(e,r,t,o,a)=>{alert("clearBufferfi not implemented (expiramental)")},e.WebGL.createQuery=e=>{alert("createQuery not implemented (expiramental)")},e.WebGL.deleteQuery=(e,r)=>{alert("deleteQuery not implemented (expiramental)")},e.WebGL.isQuery=(e,r)=>{alert("isQuery not implemented (expiramental)")},e.WebGL.beginQuery=(e,r,t)=>{alert("beginQuery not implemented (expiramental)")},e.WebGL.endQuery=(e,r)=>{alert("endQuery not implemented (expiramental)")},e.WebGL.getQuery=(e,r,t)=>{alert("getQuery not implemented (expiramental)")},e.WebGL.getQueryParameter=(e,r,t)=>{alert("getQueryParameter not implemented (expiramental)")},e.WebGL.createSampler=e=>{alert("createSampler not implemented (expiramental)")},e.WebGL.deleteSampler=(e,r)=>{alert("deleteSampler not implemented (expiramental)")},e.WebGL.isSampler=(e,r)=>{alert("isSampler not implemented (expiramental)")},e.WebGL.bindSampler=(e,r,t)=>{alert("bindSampler not implemented (expiramental)")},e.WebGL.samplerParameteri=(e,r,t,o)=>{alert("samplerParameteri not implemented (expiramental)")},e.WebGL.samplerParameterf=(e,r,t,o)=>{alert("samplerParameterf not implemented (expiramental)")},e.WebGL.getSamplerParameter=(e,r,t)=>{alert("getSamplerParameter not implemented (expiramental)")},e.WebGL.fenceSync=(e,r,t)=>{alert("fenceSync not implemented (expiramental)")},e.WebGL.isSync=(e,r)=>{alert("isSync not implemented (expiramental)")},e.WebGL.deleteSync=(e,r)=>{alert("deleteSync not implemented (expiramental)")},e.WebGL.clientWaitSync=(e,r,t,o)=>{alert("clientWaitSync not implemented (expiramental)")},e.WebGL.waitSync=(e,r,t,o)=>{alert("waitSync not implemented (expiramental)")},e.WebGL.getSyncParameter=(e,r,t)=>{alert("getSyncParameter not implemented (expiramental)")},e.WebGL.createTransformFeedback=e=>{alert("createTransformFeedback not implemented (expiramental)")},e.WebGL.deleteTransformFeedback=(e,r)=>{alert("deleteTransformFeedback not implemented (expiramental)")},e.WebGL.isTransformFeedback=(e,r)=>{alert("isTransformFeedback not implemented (expiramental)")},e.WebGL.bindTransformFeedback=(e,r,t)=>{alert("bindTransformFeedback not implemented (expiramental)")},e.WebGL.beginTransformFeedback=(e,r)=>{alert("beginTransformFeedback not implemented (expiramental)")},e.WebGL.endTransformFeedback=e=>{alert("endTransformFeedback not implemented (expiramental)")},e.WebGL.transformFeedbackVaryings=(e,r,t,o)=>{alert("transformFeedbackVaryings not implemented (expiramental)")},e.WebGL.getTransformFeedbackVarying=(e,r,t)=>{alert("getTransformFeedbackVarying not implemented (expiramental)")},e.WebGL.pauseTransformFeedback=e=>{alert("pauseTransformFeedback not implemented (expiramental)")},e.WebGL.resumeTransformFeedback=e=>{alert("resumeTransformFeedback not implemented (expiramental)")},e.WebGL.bindBufferBase=(e,r,t,o)=>{alert("bindBufferBase not implemented (expiramental)")},e.WebGL.bindBufferRange=(e,r,t,o,a,n)=>{alert("bindBufferRange not implemented (expiramental)")},e.WebGL.getIndexedParameter=(e,r,t)=>{alert("getIndexedParameter not implemented (expiramental)")},e.WebGL.getUniformIndices=(e,r,t)=>{alert("getUniformIndices not implemented (expiramental)")},e.WebGL.getActiveUniforms=(e,r,t,o)=>{alert("getActiveUniforms not implemented (expiramental)")},e.WebGL.getUniformBlockIndex=(e,r,t)=>{alert("getUniformBlockIndex not implemented (expiramental)")},e.WebGL.getActiveUniformBlockParameter=(e,r,t,o)=>{alert("getActiveUniformBlockParameter not implemented (expiramental)")},e.WebGL.getActiveUniformBlockName=(e,r,t)=>{alert("getActiveUniformBlockName not implemented (expiramental)")},e.WebGL.uniformBlockBinding=(e,r,t,o)=>{alert("uniformBlockBinding not implemented (expiramental)")},e.WebGL.createVertexArray=e=>{try{let t=r.vaoArray.findIndex((e=>null==e)),o=r.contextArray[e].createVertexArray();return-1==t?(t=r.vaoArray.length,r.vaoArray.push(o)):r.vaoArray[t]=o,t}catch(e){console.log("renderBufferArray error"),console.error(e)}},e.WebGL.deleteVertexArray=(e,r)=>{alert("deleteVertexArray not implemented (expiramental)")},e.WebGL.isVertexArray=(e,r)=>{alert("isVertexArray not implemented (expiramental)")},e.WebGL.bindVertexArray=(e,t)=>{try{r.contextArray[e].bindVertexArray(r.vaoArray[t])}catch(e){console.log("uniform2i error"),console.error(e)}}}